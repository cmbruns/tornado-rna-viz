/**
 * personType.java
 *
 * This file was generated by XMLSpy 2006r3 Enterprise Edition.
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the XMLSpy Documentation for further details.
 * http://www.altova.com/xmlspy
 */


package com.rnaml;

import com.altova.types.*;

public class personType extends com.altova.xml.Node {

	public personType(personType node) {
		super(node);
	}

	public personType(org.w3c.dom.Node node) {
		super(node);
	}

	public personType(org.w3c.dom.Document doc) {
		super(doc);
	}

	public personType(com.altova.xml.Document doc, String namespaceURI, String prefix, String name) {
		super(doc, namespaceURI, prefix, name);
	}
	
	public void adjustPrefix() {
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, null, "first-name" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, null, "first-name", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, false);
			new first_nameType(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, null, "last-name" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, null, "last-name", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, false);
			new last_nameType(tmpNode).adjustPrefix();
		}
		for (	org.w3c.dom.Node tmpNode = getDomFirstChild( Element, null, "affiliation" );
				tmpNode != null;
				tmpNode = getDomNextChild( Element, null, "affiliation", tmpNode )
			) {
			internalAdjustPrefix(tmpNode, false);
			new affiliationType(tmpNode).adjustPrefix();
		}
	}

	public static int getfirst_nameMinCount() {
		return 1;
	}

	public static int getfirst_nameMaxCount() {
		return 1;
	}

	public int getfirst_nameCount() {
		return getDomChildCount(Element, null, "first-name");
	}

	public boolean hasfirst_name() {
		return hasDomChild(Element, null, "first-name");
	}

	public first_nameType newfirst_name() {
		return new first_nameType(domNode.getOwnerDocument().createElementNS(null, "first-name"));
	}

	public first_nameType getfirst_nameAt(int index) throws Exception {
		return new first_nameType(dereference(getDomChildAt(Element, null, "first-name", index)));
	}

	public org.w3c.dom.Node getStartingfirst_nameCursor() throws Exception {
		return getDomFirstChild(Element, null, "first-name" );
	}

	public org.w3c.dom.Node getAdvancedfirst_nameCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, null, "first-name", curNode );
	}

	public first_nameType getfirst_nameValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.altova.xml.XmlException("Out of range");
		else
			return new first_nameType( dereference(curNode) );
	}

	public first_nameType getfirst_name() throws Exception 
 {
		return getfirst_nameAt(0);
	}

	public void removefirst_nameAt(int index) {
		removeDomChildAt(Element, null, "first-name", index);
	}

	public void removefirst_name() {
		while (hasfirst_name())
			removefirst_nameAt(0);
	}

	public void addfirst_name(first_nameType value) {
		appendDomElement(null, "first-name", value);	
	}

	public void insertfirst_nameAt(first_nameType value, int index) {
		insertDomElementAt(null, "first-name", index, value);
	}

	public void replacefirst_nameAt(first_nameType value, int index) {
		replaceDomElementAt(null, "first-name", index, value);
	}

	public static int getlast_nameMinCount() {
		return 1;
	}

	public static int getlast_nameMaxCount() {
		return 1;
	}

	public int getlast_nameCount() {
		return getDomChildCount(Element, null, "last-name");
	}

	public boolean haslast_name() {
		return hasDomChild(Element, null, "last-name");
	}

	public last_nameType newlast_name() {
		return new last_nameType(domNode.getOwnerDocument().createElementNS(null, "last-name"));
	}

	public last_nameType getlast_nameAt(int index) throws Exception {
		return new last_nameType(dereference(getDomChildAt(Element, null, "last-name", index)));
	}

	public org.w3c.dom.Node getStartinglast_nameCursor() throws Exception {
		return getDomFirstChild(Element, null, "last-name" );
	}

	public org.w3c.dom.Node getAdvancedlast_nameCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, null, "last-name", curNode );
	}

	public last_nameType getlast_nameValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.altova.xml.XmlException("Out of range");
		else
			return new last_nameType( dereference(curNode) );
	}

	public last_nameType getlast_name() throws Exception 
 {
		return getlast_nameAt(0);
	}

	public void removelast_nameAt(int index) {
		removeDomChildAt(Element, null, "last-name", index);
	}

	public void removelast_name() {
		while (haslast_name())
			removelast_nameAt(0);
	}

	public void addlast_name(last_nameType value) {
		appendDomElement(null, "last-name", value);	
	}

	public void insertlast_nameAt(last_nameType value, int index) {
		insertDomElementAt(null, "last-name", index, value);
	}

	public void replacelast_nameAt(last_nameType value, int index) {
		replaceDomElementAt(null, "last-name", index, value);
	}

	public static int getaffiliationMinCount() {
		return 0;
	}

	public static int getaffiliationMaxCount() {
		return Integer.MAX_VALUE;
	}

	public int getaffiliationCount() {
		return getDomChildCount(Element, null, "affiliation");
	}

	public boolean hasaffiliation() {
		return hasDomChild(Element, null, "affiliation");
	}

	public affiliationType newaffiliation() {
		return new affiliationType(domNode.getOwnerDocument().createElementNS(null, "affiliation"));
	}

	public affiliationType getaffiliationAt(int index) throws Exception {
		return new affiliationType(dereference(getDomChildAt(Element, null, "affiliation", index)));
	}

	public org.w3c.dom.Node getStartingaffiliationCursor() throws Exception {
		return getDomFirstChild(Element, null, "affiliation" );
	}

	public org.w3c.dom.Node getAdvancedaffiliationCursor( org.w3c.dom.Node curNode ) throws Exception {
		return getDomNextChild( Element, null, "affiliation", curNode );
	}

	public affiliationType getaffiliationValueAtCursor( org.w3c.dom.Node curNode ) throws Exception {
		if( curNode == null )
			throw new com.altova.xml.XmlException("Out of range");
		else
			return new affiliationType( dereference(curNode) );
	}

	public affiliationType getaffiliation() throws Exception 
 {
		return getaffiliationAt(0);
	}

	public void removeaffiliationAt(int index) {
		removeDomChildAt(Element, null, "affiliation", index);
	}

	public void removeaffiliation() {
		while (hasaffiliation())
			removeaffiliationAt(0);
	}

	public void addaffiliation(affiliationType value) {
		appendDomElement(null, "affiliation", value);	
	}

	public void insertaffiliationAt(affiliationType value, int index) {
		insertDomElementAt(null, "affiliation", index, value);
	}

	public void replaceaffiliationAt(affiliationType value, int index) {
		replaceDomElementAt(null, "affiliation", index, value);
	}

	private org.w3c.dom.Node dereference(org.w3c.dom.Node node) {
		return node;
	}
}
